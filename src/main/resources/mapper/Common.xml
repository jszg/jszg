<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace 非常重要：必须是 Mapper 类的全路径-->
<mapper namespace="com.xtuer.mapper.CommonMapper">
  <select id="findLimitation" resultType="Limitation">
    SELECT
      l.limit_id AS id,
      l.cert_no AS certNo,
      l.id_no AS idNo,
      l.status AS status,
      l.type AS type
    FROM
      t_limitation l
    WHERE
      l.id_no=#{idNo}
      AND l.cert_no = #{certNo}
      AND l.status = 1
  </select>

  <select id="findEnrollHistory" resultType="EnrollHistory">
    SELECT
      eh.enr_his_id AS id,
      eh.cert_no AS certNo,
      eh.id_no AS idNo,
      eh.judgmint_status AS judgmentStatus,
      eh.enroll_time AS enrollTime,
      eh.enroll_num AS enrollNum
    FROM
      t_enroll_history eh
    WHERE
      id_no = #{idno}
      and cert_no=#{certno}
  </select>

  <select id="findEnrollment" resultType="Enrollment">
    SELECT
      id_no AS idNo,
      id_type AS idType,
      cert_no AS certNo,
      in_history AS inHistory,
      enroll_num AS enrollNum,
      province AS province,
      city_id AS city,
      org_id AS org,
      in_registration AS inRegistration,
      reg_id AS regId
    FROM
      t_enrollment
    WHERE
      id_no = #{idno} and cert_no = #{certno}
  </select>

  <select id="findEnrollmentStatus0" resultType="Enrollment">
    SELECT
      id_no AS idNo,
      reg_id AS regId
    FROM
      t_enrollment e
    WHERE
      e.id_No=#{idno}
      AND e.cert_no = #{certno}
      AND e.delete_status=0
  </select>

  <select id="findHistoryValid" resultType="HistoryValid">
        SELECT
            t.reg_id     AS id,
            t.name       AS name,
            t.id_no      AS idNo,
            d2.name      AS idTypeName,
            t.cert_no    AS certNo,
            CASE WHEN t.SEX =1 THEN '男'
            WHEN t.SEX = 2 then '女'
            ELSE '未知'
            END         AS sexName,
            t.birthday  AS birthday,
            d.name      AS nationName,
            c.ct_name   AS certType,
            s.name      AS subjectName,
            t.org_name  AS orgName,
            delete_status AS  deleteStatus,
            t.cert_assign AS certAssign
        FROM
            t_history_valid t ,
            t_dict d,t_dict d2,
            t_cert_type c,
            t_subject s
        WHERE
          id_no = #{idno}
          AND cert_no = #{certno}
          AND t.nation = d.dic_id
          AND c.ct_id = t.ct_id
          AND t.subject = s.subject_id
          AND t.id_type = d2.dic_id
  </select>

  <select id="findHistoryValidById" resultType="HistoryValid">
        SELECT
            hv.reg_id   AS id ,
            hv.id_no    AS idNo,
            hv.cert_no  AS certNo
        FROM
            t_history_valid hv
        WHERE
            hv.reg_id = #{regId}
  </select>

  <select id="findRegistration" resultType="Registration">
    SELECT
      t.reg_id AS id,
      t.name AS name,
      t.id_no AS idNo,
      d2.name AS idTypeName,
      t.cert_no AS certNo,
      Case WHEN t.SEX =1 THEN '男'
      WHEN t.sex = 2 THEN '女'
      ELSE '未知' END AS sexName,
      t.birthday AS birthday,
      d.name AS nationName,
      c.ct_name AS certType,
      s.name AS subjectName,
      t.org_name AS orgName,
      t.cert_assign AS certAssign,
      t.ip AS ip
    FROM
      t_registration t ,
      t_dict d,t_dict d2,
      t_cert_type c,
      t_subject s
    where
      id_no = #{idno}
      AND cert_no = #{certno}
      AND t.nation = d.dic_id
      AND c.ct_id = t.ct_id
      AND t.subject = s.subject_id
      AND t.id_type = d2.dic_id
  </select>

  <select id="findRegistrationById" resultType="Registration">
    SELECT
      t.reg_id AS id,
      t.id_no AS idNo,
      t.cert_no AS certNo,
      t.ip AS ip
    FROM
      t_registration t
    WHERE
      t.reg_id =#{regId}
  </select>

   <!-- 查询注册机构注册计划 -->
   <select id="findOrgBatch" resultType="OrgBatch">
       SELECT * FROM(
           SELECT
               ob.join_in AS joinIn,
               ob.is_open AS isOpen,
               ob.pb_id   AS provinceBatch,
               pb.status  AS status,
               ob.ob_id   AS orgBatchId,
               cb.cb_id   AS certBatchId,
               ob.begindate AS beginDate,
               ob.enddate   AS endDate
           FROM
               t_org_batch ob
               LEFT JOIN t_province_batch pb ON pb.pb_id = ob.pb_id
               LEFT JOIN t_cert_batch cb on cb.cb_id = ob.cb_id
           WHERE
              ob.org_id = #{orgId}
              AND ob.type = #{type}
           ORDER BY ob.ob_id DESC
       ) WHERE <![CDATA[ ROWNUM <=1 ]]>
   </select>

   <!-- 查询网报时间段 -->
   <select id="findOrgBatchTime" resultType="OrgBatchTime">
       SELECT * FROM (
           SELECT
               obt.OB_ID            AS orgBatch,
               obt.valid_begin_date AS validBeginDate,
               obt.valid_end_date   AS validEndDate,
               ob.cb_id             AS certBatchId
           FROM
               t_org_batch_time obt
               LEFT JOIN t_org_batch ob ON ob.ob_id = obt.ob_id
           WHERE
               ob.org_id = #{orgId}
               AND ob.type = #{type}
               AND obt.valid_begin_date <![CDATA[ <= ]]> sysdate
               AND obt.valid_end_date >= sysdate
           ORDER BY
               obt.obt_id DESC
       ) WHERE <![CDATA[ ROWNUM <=1 ]]>
   </select>

   <!-- 查询网报时间段，使用 OrgBatchId -->
   <select id="findOrgBatchTimeByOrgBatchId" resultType="OrgBatchTime">
       SELECT
           obt.valid_begin_date AS validBeginDate,
           obt.valid_end_date   AS validEndDate
       FROM
            t_org_batch_time obt
       WHERE
            ob_id=#{orgBatchId}
       ORDER BY
            obt.valid_begin_date
   </select>


    <insert id="insertUserPortalLog" parameterType="UserPortalLog">
        INSERT INTO
            t_user_portal_log (id, user_id, ip, login, type, browser_info, browser_content)
        VALUES
            (s_user_portal_log_id.Nextval, #{userId}, #{ip}, #{login}, #{type}, #{browserName}, #{browserContent})
    </insert>

    <select id="findCityInfoByOrgId" resultType="Organization">
        SELECT
            o.org_type      AS orgType,
            o.org_id        AS id,
            o.parent_id     AS parent,
            o.province_id   AS provinceId,
        	p.province_city AS provinceCity
        FROM
            t_org o
            LEFT JOIN t_org p ON p.org_id = o.parent_id
        WHERE
            o.org_id = #{orgId}
    </select>

    <select id="findByProvinceId" resultType="ProvinceBatch">
        SELECT
            MAX(pb.pb_id) AS id
        FROM
            t_province_batch pb
        WHERE
            pb.province = #{provinceId}
            AND pb.type = 2
        ORDER BY
            pb.pb_id DESC
    </select>

    <select id="findByYear" resultType="CertBatch">
        SELECT
            cb.cb_id AS id
        FROM
            t_cert_batch cb
        WHERE
            cb.year = #{year}
            AND cb.type=1
            AND cb.generate=1
    </select>

    <select id="findOrgCertTypeByOrgId" resultType="OrgCertType">
        SELECT
            oct.cert_type_id AS certTypeId
        FROM
            t_org_cert_type oct
        WHERE
            oct.org_id = #{orgId}
    </select>

    <select id="findLimitationByNameAndIdNo" resultType="Limitation">
        SELECT
            l.due_time AS dueTime,
            l.reason AS reason
        FROM
            t_limitation l
        WHERE
            l.name = #{name}
            AND l.id_no = #{idNo}
            AND l.status= 1
            AND (l.due_time IS NULL OR l.due_time > sysdate)
    </select>

    <select id="findByUserYear" resultType="HistoryValid">
        SELECT
            ct.ct_name AS certType
        FROM
            t_history_valid hv
        LEFT JOIN
            t_cert_batch cb
        ON
            cb.cb_id = hv.cb_id
        LEFT JOIN
            t_cert_type ct
        ON
            ct.ct_id = hv.ct_id
        WHERE
            hv.name = #{name}
            AND hv.id_no = #{idNo}
            AND cb.year = #{year}
            AND hv.delete_status = 0
    </select>

    <select id="findByUserCertType" resultType="Score">
        SELECT
            *
        FROM
            t_score s
        WHERE
            s.user_name = #{name}
            AND s.id_no = #{idNo}
            AND s.cert_type = #{certTypeId}
            AND s.subject = #{subjectId}
    </select>
    <select id="checkHistoryExists" resultType="HistoryValid">
        SELECT
            *
        FROM
            t_history_valid hv
        WHERE
            hv.name = #{name}
            AND hv.id_no = #{idNo}
            AND hv.ct_id = #{certTypeId}
            AND hv.subject = #{subjectId}
            AND hv.delete_status = 0
    </select>

    <insert id="insertResume" parameterType="Resume">
        <![CDATA[
        INSERT INTO t_resume (
            res_id,               reg_id,         start_date,       end_date,
            work_unit,           job,             certifier
        )
        VALUES (
            s_res_id.nextval,    #{regId},       #{startDate},      #{endDate},
            #{workUnit},         #{job},         #{certifier}
        )
        ]]>
    </insert>

    <select id="findByUserExamNo" resultType="Score">
        SELECT
            s.sco_id        AS id,
            s.user_name     AS name,
            s.id_no         AS idNo,
            s.score_cert_no AS scoreCertNo,
            s.id_type       AS idType,
            s.expired_time  AS expiredTime,
            d.name          AS idTypeName,
            s.cert_type     AS certType,
            ct.admin_level  AS adminLevel,
            s.subject       AS subject,
            ct.ct_name      AS certTypeName,
            ct.admin_level  AS adminLevel,
            su.name         AS subjectName
        FROM
            t_score s
        LEFT JOIN
            t_cert_type ct
        ON
            ct.ct_id = s.cert_type
        LEFT JOIN
            t_subject su
        ON
            su.subject_id = s.subject
        LEFT JOIN
            t_dict d
        ON
            d.dic_id = s.id_type
        WHERE
            s.user_name=#{name}
            AND s.id_no=#{idNo}
            AND s.score_cert_no=#{scoreCertNo}
    </select>

    <select id="findByScoreId" resultType="Score">
        SELECT
            *
        FROM
            t_score s
        WHERE
            s.sco_id=#{scoreId}
    </select>

    <update id="updateScoreStatus" parameterType="Score">
        UPDATE
            t_score
        SET
            cert_batch = #{certBatchId},
            status = #{status}
        WHERE
            sco_id=#{scoreId}
    </update>

    <select id="findOrgNameLog" resultType="OrgNameLog">
        SELECT DISTINCT
            onl.org_id      AS orgId ,
            onl.old_name    AS oldName,
            onl.change_date AS changeDate
        FROM
            T_ORG_NAME_LOG onl
        WHERE
            onl.old_parent_id is null
        ORDER BY
            onl.change_date desc
    </select>

    <select id="findByOldParentId" resultType="OrgNameLog">
        SELECT DISTINCT
            onl.org_id      AS orgId ,
            onl.old_name    AS oldName,
            onl.change_date AS changeDate
        FROM
            T_ORG_NAME_LOG onl
        WHERE
            onl.old_parent_id = #{parentId}
        ORDER BY
            onl.change_date DESC
    </select>

    <select id="findOrgByNewDiffOrg" resultType="OrgNameLog">
        SELECT DISTINCT
            onl.org_id      AS orgId ,
            onl.old_name    AS oldName,
            onl.change_date AS changeDate
        FROM
            T_ORG_NAME_LOG onl
        WHERE
            onl.new_parent_id = #{parentId}
            AND onl.old_parent_id != onl.new_parent_id
        ORDER BY
            onl.change_date DESC
    </select>

    <select id="findOrgAnnulLogByParentId" resultType="OrgAnnulLog">
        SELECT DISTINCT
            oal.org_id AS orgId ,
            oal.annul_date AS annulDate
        FROM
            t_org_annul_log oal
        WHERE
            oal.parent_id = #{parentId}
            AND oal.annul_type = 1
    </select>

    <select id="findByCertTypeAndEduLevel" resultType="CertTypeLink">
        SELECT
            ctl.ctl_id AS id
        FROM
            t_cert_type_link ctl
        WHERE
          ctl.ct_id = #{certTypeId}
          AND ctl.edu_level_id = #{eduLevelId}
    </select>

    <select id="findHistoryValidByRegisterId" resultType="HistoryValid">
        SELECT
            hv.reg_id      AS registerId,
            hv.id_no       AS idNo,
            hv.name        AS name,
            hv.ct_id       AS certTypeId,
            hv.subject     AS subjectId,
            hv.cert_no     AS certNo,
            hv.nation      AS nationId,
            hv.sex         AS genderId,
            hv.birthday    AS birthday,
            hv.cert_assign AS certAssignDate,
            hv.org_name    AS recognizeOrgName,
            hv.id_type     AS idTypeId
        FROM
            t_history_valid hv
        WHERE
            hv.reg_id = #{registerId}
    </select>
</mapper>
