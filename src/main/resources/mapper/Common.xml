<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace 非常重要：必须是 Mapper 类的全路径-->
<mapper namespace="com.xtuer.mapper.CommonMapper">
  <select id="findLimitation" resultType="Limitation">
    select LIMIT_ID as id, CERT_NO as certNo, ID_NO as idNo,STATUS as status, TYPE as type
    from t_limitation l
    where  l.id_no=#{idno} and l.cert_no = #{certno} and l.status = 1 and (l.due_time is null or l.due_Time > sysdate)
  </select>

  <select id="findEnrollhistory" resultType="Enrollhistory">
    select ENR_HIS_ID as id, eh.CERT_NO as certNo, eh.ID_NO as idNo,eh.JUDGMINT_STATUS as judgmentStatus, eh.ENROLL_TIME as enrollTime, eh.ENROLL_NUM
     as enrollNum
    from t_enroll_history eh
    where id_no = #{idno} and cert_no=#{certno}
  </select>

  <select id="findEnrollment" resultType="Enrollment">
    select  ID_NO as idNo, ID_TYPE as idType, CERT_NO as certNo, IN_HISTORY as inHistory, ENROLL_NUM as enrollNum,
    PROVINCE as province, CITY_ID as city, ORG_ID as org, IN_REGISTRATION as inRegistration, REG_ID as regId
    from t_enrollment
    where ID_NO = #{idno} and CERT_NO = #{certno}
  </select>

  <select id="findEnrollmentStatus0" resultType="Enrollment">
    select ID_NO as idNo, REG_ID as regId from t_enrollment e where e.id_No=#{idno} and e.CERT_NO = #{certno} and e.delete_status=0
  </select>

  <select id="findHistoryValid" resultType="HistoryValid">
        select t.REG_ID as id, t.NAME as name, t.ID_NO as idNo, d2.NAME as idTypeName, t.CERT_NO as certNo,
           Case when t.SEX =1 then '男'
           when t.SEX = 2 then '女'
           else '未知'
           end as sexName,
           t.BIRTHDAY as birthday, d.NAME as nationName, c.CT_NAME as certType,  s.NAME as subjectName,
           t.ORG_NAME as orgName, DELETE_STATUS as  deleteStatus,t.CERT_ASSIGN as certAssign
    from t_history_valid t ,t_dict d,t_dict d2, T_CERT_TYPE c, T_SUBJECT s
    where id_no = #{idno} and CERT_NO = #{certno}
          and t.NATION = d.DIC_ID
          and c.CT_ID = t.CT_ID
          and t.SUBJECT = s.SUBJECT_ID
          and t.ID_TYPE = d2.DIC_ID
  </select>

  <select id="findHistoryValidById" resultType="HistoryValid">
    select t.REG_ID as id ,t.ID_NO as idNo, t.CERT_NO as certNo from t_history_valid hv where hv.reg_id = #{regId}
  </select>

  <select id="findRegistration" resultType="Registration">
    select t.REG_ID as id, t.NAME as name, t.ID_NO as idNo, d2.NAME as idTypeName, t.CERT_NO as certNo,
      Case when t.SEX =1 then '男'
      when t.SEX = 2 then '女'
      else '未知'
      end as sexName,
      t.BIRTHDAY as birthday, d.NAME as nationName, c.CT_NAME as certType,  s.NAME as subjectName,
      t.ORG_NAME as orgName, t.CERT_ASSIGN as certAssign, t.IP as ip
    from t_registration t ,t_dict d,t_dict d2, T_CERT_TYPE c, T_SUBJECT s
    where id_no = #{idno} and CERT_NO = #{certno}
    and t.NATION = d.DIC_ID
    and c.CT_ID = t.CT_ID
    and t.SUBJECT = s.SUBJECT_ID
    and t.ID_TYPE = d2.DIC_ID
  </select>

  <select id="findRegistrationById" resultType="Registration">
    select t.REG_ID as id, t.ID_NO as idNo, t.CERT_NO as certNo, t.IP as ip
    from t_registration t where t.reg_id =#{regId}
  </select>

    <!-- 查询注册机构注册计划 -->
    <select id="findOrgBatch" resultType="OrgBatch">
        SELECT * FROM(
            SELECT
                ob.join_in AS joinIn,
                ob.is_open AS isOpen,
                ob.PB_ID   AS provinceBatch,
                pb.status  AS status
            FROM
                t_org_batch ob
                LEFT JOIN t_province_batch pb ON pb.pb_id = ob.pb_id
            WHERE ob.org_id = #{orgId} AND ob.type = 2
            ORDER BY ob.ob_id DESC
        ) WHERE <![CDATA[ ROWNUM <=1 ]]>
    </select>

    <!-- 查询网报时间段 -->
    <select id="findOrgBatchTime" resultType="OrgBatchTime">
        SELECT * FROM (
            SELECT
                obt.OB_ID            AS orgBatch,
                obt.VALID_BEGIN_DATE AS validBeginDate,
                obt.VALID_END_DATE   AS validEndDate
            FROM
                t_org_batch_time obt
                LEFT JOIN t_org_batch ob ON ob.ob_id = obt.ob_id
            WHERE
                ob.org_id = #{orgId}
                AND ob.type = 2
                AND obt.valid_begin_date <![CDATA[ <= ]]> sysdate
                AND obt.valid_end_date >= sysdate
                ORDER BY obt.obt_id DESC
        ) WHERE <![CDATA[ ROWNUM <=1 ]]>
    </select>


    <insert id="insertUserPortalLog" parameterType="UserPortalLog">
      insert
      into
        t_user_portal_log
        (id, user_id, ip, login, type, browser_info, browser_content)
      values
        (0, #{userId}, #{ip}, #{login}, #{type}, #{browserInfo}, #{browserContent})
    </insert>

</mapper>
